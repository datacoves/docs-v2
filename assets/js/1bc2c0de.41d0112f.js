"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5177],{16986:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_apps-2154e03d572d0b6aa29303c57b0c66de.png"},28255:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_webhook_channel-19ada987f854fc15488ad3c3d2b95db2.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(96540);const t={},a=i.createContext(t);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},33029:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_name_workspace-ac089092c8385a0d1ac7b878e95c0c76.png"},38297:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"how-tos/airflow/send-slack-notifications","title":"Notifications - Send Slack notifications","description":"As stated in how to send email notifications, Airflow allows multiple ways to inform users about DAGs and tasks status.","source":"@site/docs/how-tos/airflow/send-slack-notifications.md","sourceDirName":"how-tos/airflow","slug":"/how-tos/airflow/send-slack-notifications","permalink":"/docusaurus-test/docs/how-tos/airflow/send-slack-notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-tos/airflow/send-slack-notifications.md","tags":[],"version":"current","sidebarPosition":36,"frontMatter":{"title":"Notifications - Send Slack notifications","sidebar_position":36},"sidebar":"tutorialSidebar","previous":{"title":"Notifications - Send Microsoft Teams notifications","permalink":"/docusaurus-test/docs/how-tos/airflow/send-ms-teams-notifications"},"next":{"title":"Worker - Custom Worker Environment","permalink":"/docusaurus-test/docs/how-tos/airflow/customize-worker-environment"}}');var t=s(74848),a=s(28453);const o={title:"Notifications - Send Slack notifications",sidebar_position:36},c="How to send Slack notifications on DAG's status",r={},l=[{value:"Prepare Slack",id:"prepare-slack",level:2},{value:"Prepare Airflow",id:"prepare-airflow",level:2},{value:"Create a new Integration",id:"create-a-new-integration",level:3},{value:"Add integration to an Environment",id:"add-integration-to-an-environment",level:3},{value:"Implement DAG",id:"implement-dag",level:2},{value:"Callback Configuration",id:"callback-configuration",level:3},{value:"Python version",id:"python-version",level:3},{value:"YAML version",id:"yaml-version",level:3},{value:"Getting Started Next Steps",id:"getting-started-next-steps",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"how-to-send-slack-notifications-on-dags-status",children:"How to send Slack notifications on DAG's status"})}),"\n",(0,t.jsxs)(n.p,{children:["As stated in ",(0,t.jsx)(n.a,{href:"/docusaurus-test/docs/how-tos/airflow/send-emails",children:"how to send email notifications"}),", Airflow allows multiple ways to inform users about DAGs and tasks status."]}),"\n",(0,t.jsxs)(n.p,{children:["Furthermore, it's important to understand Airflow handles these 4 status (",(0,t.jsx)(n.code,{children:"failure"}),", ",(0,t.jsx)(n.code,{children:"retry"}),", ",(0,t.jsx)(n.code,{children:"success"})," and ",(0,t.jsx)(n.code,{children:"missed SLA"}),") via callbacks. You can learn more about them ",(0,t.jsx)(n.a,{href:"https://airflow.apache.org/docs/apache-airflow/2.2.1/logging-monitoring/callbacks.html",children:"here"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Below we explain how to use those callbacks to send Slack notifications."}),"\n",(0,t.jsx)(n.h2,{id:"prepare-slack",children:"Prepare Slack"}),"\n",(0,t.jsxs)(n.p,{children:['To send messages in Slack, you must first create a Slack App, which will act as a "bot" that sends messages. Visit ',(0,t.jsx)(n.a,{href:"https://api.slack.com/apps",children:"https://api.slack.com/apps"})," to start."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(16986).A+"",width:"722",height:"510"})}),"\n",(0,t.jsxs)(n.p,{children:["As it's the most basic type of application, you have to create it ",(0,t.jsx)(n.code,{children:"from scratch"})]}),"\n",(0,t.jsxs)(n.p,{children:["After that, give it a ",(0,t.jsx)(n.code,{children:"name"})," and assign it to your desired ",(0,t.jsx)(n.code,{children:"workspace"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(49929).A+"",width:"520",height:"372"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(33029).A+"",width:"522",height:"503"})}),"\n",(0,t.jsxs)(n.p,{children:["Once created, you must specify which features it will use. In order to send messages to your workspace channels, ",(0,t.jsx)(n.code,{children:"Incoming Webhooks"})," is the only mandatory one."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(66226).A+"",width:"689",height:"362"})}),"\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.code,{children:"Incoming Webhooks"})," configuration screen, you must ",(0,t.jsx)(n.code,{children:"toggle"})," the On/Off slider for the settings to appear. Once that's done, you can ",(0,t.jsx)(n.code,{children:"Add New Webhook to Workspace"}),", where you will create ",(0,t.jsx)(n.code,{children:"one webhook for each channel"})," you want to send messages to."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(52814).A+"",width:"705",height:"887"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(28255).A+"",width:"573",height:"432"})}),"\n",(0,t.jsxs)(n.p,{children:["Once assigned a channel, your Incoming Webhook configuration screen will change to show your webhook ",(0,t.jsx)(n.code,{children:"URL"})," and ",(0,t.jsx)(n.code,{children:"Key"})]}),"\n",(0,t.jsxs)(n.p,{children:["The standard syntax of these are ",(0,t.jsx)(n.code,{children:"url/key"}),", in our example: ",(0,t.jsx)(n.code,{children:"https://hooks.slack.com/services"})," followed by ",(0,t.jsx)(n.code,{children:"T05XXXXXX/XXXXXXXXX/XXXXXXXXX"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Slack Apps",src:s(70995).A+"",width:"686",height:"506"})}),"\n",(0,t.jsxs)(n.p,{children:["Now your Slack App is ready to send messages to ",(0,t.jsx)(n.code,{children:"#airflow-notifications-dev"})," via webhooks."]}),"\n",(0,t.jsx)(n.h2,{id:"prepare-airflow",children:"Prepare Airflow"}),"\n",(0,t.jsx)(n.h3,{id:"create-a-new-integration",children:"Create a new Integration"}),"\n",(0,t.jsxs)(n.p,{children:["In Datacoves, create a new integration of type ",(0,t.jsx)(n.code,{children:"Slack"})," by navigating to the Integrations admin page."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Integrations Admin",src:s(50087).A+"",width:"488",height:"686"})}),"\n",(0,t.jsxs)(n.p,{children:["Click on the ",(0,t.jsx)(n.code,{children:"+ New integration"})," button."]}),"\n",(0,t.jsxs)(n.p,{children:["Provide a name and select ",(0,t.jsx)(n.code,{children:"Slack"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Save Integration",src:s(51694).A+"",width:"879",height:"501"})}),"\n",(0,t.jsxs)(n.p,{children:["Provide the required details and ",(0,t.jsx)(n.code,{children:"Save"})," changes."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["[!TIP]The name you specify will be used to create the Airflow-Slack connection. It will be uppercased and joined by underscores -> ",(0,t.jsx)(n.code,{children:"'SLACK NOTIFICATIONS'"})," will become ",(0,t.jsx)(n.code,{children:"SLACK_NOTIFICATIONS"}),". You will need this name below."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"add-integration-to-an-environment",children:"Add integration to an Environment"}),"\n",(0,t.jsxs)(n.p,{children:["Once the ",(0,t.jsx)(n.code,{children:"Slack"})," integration is created, it needs to be associated with the Airflow service within a Datacoves environment."]}),"\n",(0,t.jsxs)(n.p,{children:["Go to the ",(0,t.jsx)(n.code,{children:"Environments"})," admin screen."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Environments admin",src:s(67064).A+"",width:"488",height:"686"})}),"\n",(0,t.jsxs)(n.p,{children:["Edit the environment that has the Airflow service you want to configure and click on the ",(0,t.jsx)(n.code,{children:"Integrations"})," tab."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Edit integrations",src:s(50731).A+"",width:"2434",height:"916"})}),"\n",(0,t.jsxs)(n.p,{children:["Click on the ",(0,t.jsx)(n.code,{children:"+ Add new integration"})," button and select the integration you created previously. In the second dropdown select ",(0,t.jsx)(n.code,{children:"Airflow"})," as the service."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Add integration",src:s(39254).A+"",width:"1156",height:"344"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Save"})," changes. The Airflow service will be restarted and will include the Slack configuration required to send notifications."]}),"\n",(0,t.jsx)(n.h2,{id:"implement-dag",children:"Implement DAG"}),"\n",(0,t.jsx)(n.p,{children:"Once Slack and Airflow are configured, you can start using the integration within Airflow Callbacks to send notifications to your Slack channel."}),"\n",(0,t.jsx)(n.p,{children:"Slack will receive a message with a 'Logs' link that users can click on and go directly to the Airflow log for the Task."}),"\n",(0,t.jsx)(n.h3,{id:"callback-configuration",children:"Callback Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["In the examples below, we will send a notification on failing tasks or when the full DAG completes successfully using our custom callbacks: ",(0,t.jsx)(n.code,{children:"inform_failure"})," and ",(0,t.jsx)(n.code,{children:"inform_success"}),"."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["[!NOTE]In addition to ",(0,t.jsx)(n.code,{children:"inform_failure"})," and ",(0,t.jsx)(n.code,{children:"inform_success"}),", we support these callbacks ",(0,t.jsx)(n.code,{children:"inform_failure"}),", ",(0,t.jsx)(n.code,{children:"inform_success"}),", ",(0,t.jsx)(n.code,{children:"inform_retry"}),", ",(0,t.jsx)(n.code,{children:"inform_sla_miss"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To send Slack notifications, in the Airflow DAG we need to import the appropriate callbacks and call them with:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"slack_webhook_conn_id"}),": the name of the Datacoves Integration created above"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"text"}),": to customize the message sent to Slack."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["[!ATTENTION] ",(0,t.jsx)(n.code,{children:"on_failure_callback"})," will throw an error if using lists causing your task to fail."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"python-version",children:"Python version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from pendulum import datetime\nfrom airflow.decorators import dag, task\nfrom airflow.providers.slack.notifications.slack_webhook import send_slack_webhook_notification\n\n# \u2705 Define Slack notifications (These will send messages when the DAG succeeds or fails)\nrun_inform_success = send_slack_webhook_notification(\n    slack_webhook_conn_id="SLACK_NOTIFICATIONS",  # Slack integration name slug -- double check in Datacoves integrations\' admin\n    text="The DAG {{ dag.dag_id }} succeeded",\n)\n\nrun_inform_failure = send_slack_webhook_notification(\n    slack_webhook_conn_id="SLACK_NOTIFICATIONS",\n    text="The DAG {{ dag.dag_id }} failed",\n)\n\n@dag(\n    default_args={\n        "start_date": datetime(2024, 1, 1),\n        "owner": "Noel Gomez",  # Replace with your name\n        "email": "gomezn@example.com",  # Replace with your email\n        "email_on_failure": True,  \n    },\n    description="Sample DAG with Slack notification",  \n    schedule="0 0 1 */12 *",  \n    tags=["version_2"], \n    catchup=False,  \n    on_success_callback=[run_inform_success],  \n    on_failure_callback=[run_inform_failure], \n)\ndef yaml_slack_dag():\n\n    @task.datacoves_dbt(connection_id="main")  \n    def transform():\n        return "dbt run -s personal_loans"  \n\n    transform()  \n\n# Instantiate the DAG\ndag = yaml_slack_dag()\n'})}),"\n",(0,t.jsx)(n.h3,{id:"yaml-version",children:"YAML version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'description: "Sample DAG with Slack notification, custom image, and resource requests"\nschedule: "0 0 1 */12 *"\ntags:\n  - version_2\ndefault_args:\n  start_date: 2024-01-01\n  owner: Noel Gomez\n  # Replace with the email of the recipient for failures\n  email: gomezn@example.com\n  email_on_failure: true\ncatchup: false\n\n# Optional callbacks used to send Slack notifications\ncallbacks:\n  on_success_callback:\n    callback: airflow.providers.slack.notifications.slack_webhook.send_slack_webhook_notification\n    args:\n      - slack_webhook_conn_id: SLACK_NOTIFICATIONS\n      - text: Custom success message\n  on_failure_callback:\n    callback: airflow.providers.slack.notifications.slack_webhook.send_slack_webhook_notification\n    args:\n      - slack_webhook_conn_id: SLACK_NOTIFICATIONS\n      - text: Custom error message\n\n# DAG Tasks\nnodes:\n  transform:\n    operator: operators.datacoves.dbt.DatacovesDbtOperator\n    type: task\n\n    bash_command: "dbt run -s personal_loans"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"getting-started-next-steps",children:"Getting Started Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["Start ",(0,t.jsx)(n.a,{href:"/docusaurus-test/docs/getting-started/Admin/creating-airflow-dags",children:"developing DAGs"})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},39254:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_add_integration-bc733692aa87df6f259cbad35134a95f.png"},49929:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_from_scratch-3bee15150f75b5fdef88fe48966c03b7.png"},50087:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/menu_integrations-1e5dd1c2c142c4a45bf94a4d531f2b75.gif"},50731:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/edit_integrations-d44c1c7c6ca382837c9f874f37c6dbc8.png"},51694:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_save_integration-541712d5de938c708a6e66aba2d3db1c.png"},52814:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_incoming_webhook_setup-2c1a125a6fa8f06935d32b14f5c7cc4d.png"},66226:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_features_incoming_webhook-6c664783b0e55df432de5b9407b036cd.png"},67064:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/menu_environments-28ad67b99ef2db7956f89f8ba1c9825d.gif"},70995:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/slack_webhook_url_token-ff36a0fae5b3d47687a90e79cce2467b.png"}}]);