"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[679],{4854:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/save_msteams_integration-cb3b560703b9396c30fb1287815cfe14.png"},9006:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"how-tos/airflow/send-ms-teams-notifications","title":"Notifications - Send Microsoft Teams notifications","description":"As stated in how to send email notifications, Airflow allows multiple ways to inform users about DAGs and tasks status.","source":"@site/docs/how-tos/airflow/send-ms-teams-notifications.md","sourceDirName":"how-tos/airflow","slug":"/how-tos/airflow/send-ms-teams-notifications","permalink":"/docusaurus-test/docs/how-tos/airflow/send-ms-teams-notifications","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":35,"frontMatter":{"title":"Notifications - Send Microsoft Teams notifications","sidebar_position":35},"sidebar":"tutorialSidebar","previous":{"title":"Notifications - Send Emails","permalink":"/docusaurus-test/docs/how-tos/airflow/send-emails"},"next":{"title":"Notifications - Send Slack notifications","permalink":"/docusaurus-test/docs/how-tos/airflow/send-slack-notifications"}}');var t=i(74848),o=i(28453);const a={title:"Notifications - Send Microsoft Teams notifications",sidebar_position:35},r="How to send Microsoft Teams notifications on DAG's status",c={},d=[{value:"Prepare Microsoft Teams",id:"prepare-microsoft-teams",level:2},{value:"Prepare Airflow",id:"prepare-airflow",level:2},{value:"Create a new Integration",id:"create-a-new-integration",level:3},{value:"Add integration to an Environment",id:"add-integration-to-an-environment",level:3},{value:"Implement DAG",id:"implement-dag",level:2},{value:"Callback Configuration",id:"callback-configuration",level:3},{value:"Python version",id:"python-version",level:3},{value:"YAML version",id:"yaml-version",level:3},{value:"Getting Started Next Steps",id:"getting-started-next-steps",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"how-to-send-microsoft-teams-notifications-on-dags-status",children:"How to send Microsoft Teams notifications on DAG's status"})}),"\n",(0,t.jsxs)(n.p,{children:["As stated in ",(0,t.jsx)(n.a,{href:"/docusaurus-test/docs/how-tos/airflow/send-emails",children:"how to send email notifications"}),", Airflow allows multiple ways to inform users about DAGs and tasks status."]}),"\n",(0,t.jsxs)(n.p,{children:["Furthermore, it's important to understand Airflow handles these 4 status (",(0,t.jsx)(n.code,{children:"failure"}),", ",(0,t.jsx)(n.code,{children:"retry"}),", ",(0,t.jsx)(n.code,{children:"success"})," and ",(0,t.jsx)(n.code,{children:"missed SLA"}),") via callbacks. You can learn more about them ",(0,t.jsx)(n.a,{href:"https://airflow.apache.org/docs/apache-airflow/2.2.1/logging-monitoring/callbacks.html",children:"here"})]}),"\n",(0,t.jsx)(n.p,{children:"Below we explain how to use those callbacks to send Microsoft Teams notifications."}),"\n",(0,t.jsx)(n.h2,{id:"prepare-microsoft-teams",children:"Prepare Microsoft Teams"}),"\n",(0,t.jsx)(n.p,{children:"Sending messages through Teams is done using Webhooks. These connections can be assigned to MS Teams channels."}),"\n",(0,t.jsxs)(n.p,{children:["In the channel you want to send Airflow notifications to, click the ",(0,t.jsx)(n.code,{children:"..."})," -> ",(0,t.jsx)(n.code,{children:"Connectors"})," and search for ",(0,t.jsx)(n.code,{children:"Incoming Webhook"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Create channel Connector",src:i(71117).A+"",width:"454",height:"618"})}),"\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.code,{children:"Configure"}),", give it a name, and optionally select an image to use as the sender's avatar, then click ",(0,t.jsx)(n.code,{children:"Create"})," and you will be given a webhook URL."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Create Incoming Webhook",src:i(73984).A+"",width:"1508",height:"1388"})}),"\n",(0,t.jsx)(n.admonition,{title:"Store this URL in a safe place as you will need it in a subsequent step and anyone with this link can send notification to that MS Teams channel",type:"info"}),"\n",(0,t.jsx)(n.h2,{id:"prepare-airflow",children:"Prepare Airflow"}),"\n",(0,t.jsx)(n.h3,{id:"create-a-new-integration",children:"Create a new Integration"}),"\n",(0,t.jsxs)(n.p,{children:["In Datacoves, create a new integration of type ",(0,t.jsx)(n.code,{children:"MS Teams"})," by navigating to the Integrations admin page."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Integrations Admin",src:i(50087).A+"",width:"488",height:"686"})}),"\n",(0,t.jsxs)(n.p,{children:["Click on the ",(0,t.jsx)(n.code,{children:"+ New integration"})," button."]}),"\n",(0,t.jsxs)(n.p,{children:["Provide a name and select ",(0,t.jsx)(n.code,{children:"MS Teams"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Save Integration",src:i(4854).A+"",width:"1250",height:"711"})}),"\n",(0,t.jsxs)(n.p,{children:["Provide the required details and ",(0,t.jsx)(n.code,{children:"Save"})," changes."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The name you specify will be used to create the Airflow-Teams connection. It will be uppercased and joined by underscores -> ",(0,t.jsx)(n.code,{children:"'ms teams'"})," will become :::"]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MS_TEAMS"}),". You will need this name below."]}),"\n",(0,t.jsx)(n.h3,{id:"add-integration-to-an-environment",children:"Add integration to an Environment"}),"\n",(0,t.jsxs)(n.p,{children:["Once the ",(0,t.jsx)(n.code,{children:"MS Teams"})," integration is created, it needs to be associated with the Airflow service within a Datacoves environment."]}),"\n",(0,t.jsxs)(n.p,{children:["Go to the ",(0,t.jsx)(n.code,{children:"Environments"})," admin screen."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Environments admin",src:i(67064).A+"",width:"488",height:"686"})}),"\n",(0,t.jsxs)(n.p,{children:["Select the Edit icon for the environment that has the Airflow service you want to configure and click on the ",(0,t.jsx)(n.code,{children:"Integrations"})," tab."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Edit integrations",src:i(50731).A+"",width:"2434",height:"916"})}),"\n",(0,t.jsxs)(n.p,{children:["Click on the ",(0,t.jsx)(n.code,{children:"+ Add new integration"})," button and select the integration you created previously. In the second dropdown select ",(0,t.jsx)(n.code,{children:"Airflow"})," as the service."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Add integration",src:i(55060).A+"",width:"1143",height:"388"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Save"})," changes. The Airflow service will be restarted and will include the Teams configuration required to send notifications."]}),"\n",(0,t.jsx)(n.h2,{id:"implement-dag",children:"Implement DAG"}),"\n",(0,t.jsx)(n.p,{children:"Once MS Teams and Airflow are configured, you can start using the integration within Airflow Callbacks to send notifications to your MS Teams channel."}),"\n",(0,t.jsx)(n.p,{children:"MS Teams will receive a message with a 'View Log' link that users can click on and go directly to the Airflow log for the Task."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Card message",src:i(17938).A+"",width:"1052",height:"352"})}),"\n",(0,t.jsx)(n.h3,{id:"callback-configuration",children:"Callback Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["In the examples below, we will send a notification on failing tasks or when the full DAG completes successfully using our custom callbacks: ",(0,t.jsx)(n.code,{children:"inform_failure"})," and ",(0,t.jsx)(n.code,{children:"inform_success"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In addition to ",(0,t.jsx)(n.code,{children:"inform_failure"})," and ",(0,t.jsx)(n.code,{children:"inform_success"}),", we support these callbacks ",(0,t.jsx)(n.code,{children:"inform_failure"}),", ",(0,t.jsx)(n.code,{children:"inform_success"}),", ",(0,t.jsx)(n.code,{children:"inform_retry"}),", ",(0,t.jsx)(n.code,{children:"inform_sla_miss"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"To send MS Teams notifications, in the Airflow DAG we need to import the appropriate notifier and use it with the following parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"connection_id"}),": the name of the Datacoves Integration created above","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if no connection_id is specified, MSTeams Notifier will use ",(0,t.jsx)(n.code,{children:"ms_teams"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"message"}),": the body of the message"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"theme_color"}),": theme color of the MS Teams card"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.mdxAdmonitionTitle,{children:[(0,t.jsx)(n.code,{children:"on_failure_callback"})," will throw an error if using lists causing your task to fail."]}),(0,t.jsx)(n.h3,{id:"python-version",children:"Python version"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from pendulum import datetime\nfrom airflow.decorators import dag, task\nfrom notifiers.datacoves.ms_teams import MSTeamsNotifier\n\n@dag(\n    default_args={\n        "start_date": datetime(2024, 1, 1),\n        "owner": "Noel Gomez",\n        "email": "gomezn@example.com",\n        "email_on_failure": True,\n    },\n    description="Sample DAG with MS Teams notification",\n    schedule="0 0 1 */12 *",\n    tags=["version_2", "ms_teams_notification", "blue_green"],\n    catchup=False,\n    on_success_callback=MSTeamsNotifier(\n        connection_id="MS_TEAMS",  # \u2705 If using \'ms teams\' as an Integration, this is optional\n        message="DAG {{ dag.dag_id }} Succeeded"\n    ),\n    on_failure_callback=MSTeamsNotifier(message="DAG {{ dag.dag_id }} Failed"),\n)\ndef dbt_run():\n\n    @task.datacoves_dbt(connection_id="main")  \n    def transform():\n        return "dbt run -s personal_loans"\n\n    transform() \n\ndag = dbt_run()\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Quotation marks are not needed when setting the custom message. However, making use of Jinja in a YAML file requires the message to be wrapped in quotations to be parsed properly. eg) ",(0,t.jsx)(n.code,{children:"{{ dag.dag_id }} failed"})]})}),"\n",(0,t.jsx)(n.h3,{id:"yaml-version",children:"YAML version"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'description: "Sample DAG with MS Teams notification"\nschedule: "0 0 1 */12 *"\ntags:\n  - version_2\n  - ms_teams_notification\ndefault_args:\n  start_date: 2024-01-01\n  owner: Noel Gomez\n  # Replace with the email of the recipient for failures\n  email: gomezn@example.com\n  email_on_failure: true\ncatchup: false\n\n# Optional callbacks used to send MS Teams notifications\nnotifications:\n  on_success_callback:\n    notifier: notifiers.datacoves.ms_teams.MSTeamsNotifier\n    args:\n      connection_id: MS_TEAMS\n      message: "DAG {{ dag.dag_id }} Succeeded"\n      color: 0000FF\n  on_failure_callback:\n    notifier: notifiers.datacoves.ms_teams.MSTeamsNotifier\n    args:\n      connection_id: MS_TEAMS\n      message: "DAG {{ dag.dag_id }} Failed"\n      color: 9900FF\n\n# DAG Tasks\nnodes:\n  transform:\n    operator: operators.datacoves.dbt.DatacovesDbtOperator\n    type: task\n\n    bash_command: "dbt run -s personal_loans"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"getting-started-next-steps",children:"Getting Started Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["Start ",(0,t.jsx)(n.a,{href:"/docusaurus-test/docs/getting-started/Admin/creating-airflow-dags",children:"developing DAGs"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},17938:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/teams-card-message-5cde1dc50b554b58f1409eabedd564d1.png"},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var s=i(96540);const t={},o=s.createContext(t);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},50087:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/menu_integrations-1e5dd1c2c142c4a45bf94a4d531f2b75.gif"},50731:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/edit_integrations-d44c1c7c6ca382837c9f874f37c6dbc8.png"},55060:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/add_msteams_integration-c38902b0aa565b9ff4b33c038950f84b.png"},67064:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/menu_environments-28ad67b99ef2db7956f89f8ba1c9825d.gif"},71117:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/create-channel-connector-3bb3407c840d6ab8d05f750ea8bd3df2.png"},73984:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/create-incoming-webhook-ff6ea4521b954d06176bea054877cb08.png"}}]);