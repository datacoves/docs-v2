"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8956],{6232:(e,r,n)=>{n.d(r,{A:()=>s});const s=n.p+"assets/images/variablle_flow-e79d697f1b28276778a5b6eae8ec76e7.png"},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var s=n(96540);const a={},t=s.createContext(a);function o(e){const r=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(t.Provider,{value:r},e.children)}},60911:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"how-tos/airflow/use-aws-secrets-manager","title":"Secrets - AWS Secrets Manager","description":"Datacoves integrates with the Airflow Secrets Backend Interface, offering support for both its native Datacoves Secrets Backend and AWS Secrets Manager. For other Airflow-compatible Secrets Managers, please reach out to us.","source":"@site/docs/how-tos/airflow/use-aws-secrets-manager.mdx","sourceDirName":"how-tos/airflow","slug":"/how-tos/airflow/use-aws-secrets-manager","permalink":"/docusaurus-test/docs/how-tos/airflow/use-aws-secrets-manager","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-tos/airflow/use-aws-secrets-manager.mdx","tags":[],"version":"current","sidebarPosition":36,"frontMatter":{"title":"Secrets - AWS Secrets Manager","sidebar_position":36},"sidebar":"tutorialSidebar","previous":{"title":"Notifications - Send Slack notifications","permalink":"/docusaurus-test/docs/how-tos/airflow/send-slack-notifications"},"next":{"title":"Secrets - Datacoves secrets manager","permalink":"/docusaurus-test/docs/how-tos/airflow/use-datacoves-secrets-manager"}}');var a=n(74848),t=n(28453);const o={title:"Secrets - AWS Secrets Manager",sidebar_position:36},i="How to use AWS Secrets Manager in Airflow",c={},l=[{value:"Read variable from AWS Secrets Manager",id:"read-variable-from-aws-secrets-manager",level:2},{value:"Best practices",id:"best-practices",level:3},{value:"Example DAG using AWS Secrets Manager",id:"example-dag-using-aws-secrets-manager",level:3},{value:"Using a secrets manager directly from Airflow",id:"using-a-secrets-manager-directly-from-airflow",level:2},{value:"Configure an Airflow Connection",id:"configure-an-airflow-connection",level:3},{value:"Check when secret is being fetched from AWS",id:"check-when-secret-is-being-fetched-from-aws",level:2}];function d(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"how-to-use-aws-secrets-manager-in-airflow",children:"How to use AWS Secrets Manager in Airflow"})}),"\n",(0,a.jsx)(r.p,{children:"Datacoves integrates with the Airflow Secrets Backend Interface, offering support for both its native Datacoves Secrets Backend and AWS Secrets Manager. For other Airflow-compatible Secrets Managers, please reach out to us."}),"\n",(0,a.jsxs)(r.p,{children:["Secrets backends are configured per project. See ",(0,a.jsx)(r.a,{href:"/docusaurus-test/docs/how-tos/datacoves/how_to_configure_aws_secrets_manager",children:"configure your AWS Secrets Manager"})," for details."]}),"\n",(0,a.jsx)(r.h2,{id:"read-variable-from-aws-secrets-manager",children:"Read variable from AWS Secrets Manager"}),"\n",(0,a.jsxs)(r.p,{children:["Airflow's ",(0,a.jsx)(r.code,{children:"Variable.get"})," searches multiple places:"]}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsx)(r.li,{children:"AWS Secrets Manager (if configured)"}),"\n",(0,a.jsx)(r.li,{children:"Datacoves Secrets Manager"}),"\n",(0,a.jsx)(r.li,{children:"Airflow environment variables"}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Once a variable is found, Airflow stops searching."}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"Secrets flowchart",src:n(6232).A+"",width:"1560",height:"840"})}),"\n",(0,a.jsx)(r.h3,{id:"best-practices",children:"Best practices"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["Call ",(0,a.jsx)(r.code,{children:"Variable.get"})," from within an Airflow/Datacoves decorator to fetch at runtime only."]}),"\n",(0,a.jsxs)(r.li,{children:["Use ",(0,a.jsx)(r.code,{children:"connections_lookup_pattern"})," and ",(0,a.jsx)(r.code,{children:"variables_lookup_pattern"})," to filter prefixes (e.g., ",(0,a.jsx)(r.code,{children:"aws_"}),") to reduce unnecessary API calls. Example: ",(0,a.jsx)(r.code,{children:"aws_my_secret"}),"."]}),"\n"]}),"\n",(0,a.jsx)(r.h3,{id:"example-dag-using-aws-secrets-manager",children:"Example DAG using AWS Secrets Manager"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:'from airflow.decorators import dag, task\nfrom pendulum import datetime\nfrom airflow.models import Variable\n\n@dag(\n    catchup=False,\n    default_args={\n        "start_date": datetime(2024, 1, 1),\n        "owner": "Mayra Pena",\n        "email": "mayra@example.com",\n        "email_on_failure": True,\n    },\n    tags=["version_1"],\n    description="Testing task decorators",\n    schedule_interval="0 0 1 */12 *",\n)\ndef task_decorators_example():\n\n    @task.datacoves_bash(connection_id="main")\n    def calling_vars_in_decorator() -> str:\n        my_var = Variable.get("aws_my_secret")\n        return "My variable is: " + my_var\n\n    calling_vars_in_decorator()\n\ndag = task_decorators_example()\n'})}),"\n",(0,a.jsx)(r.admonition,{type:"tip",children:(0,a.jsxs)(r.p,{children:["To auto mask your secret you can use ",(0,a.jsx)(r.code,{children:"secret"})," or ",(0,a.jsx)(r.code,{children:"password"})," in the secret name since this will set ",(0,a.jsx)(r.code,{children:"hide_sensitive_var_conn_fields"})," to True. eg ",(0,a.jsx)(r.code,{children:"aws_my_password"}),". Please see ",(0,a.jsx)(r.a,{href:"https://www.astronomer.io/docs/learn/airflow-variables#hide-sensitive-information-in-airflow-variables",children:"this documentation"})," for a full list of masking words."]})}),"\n",(0,a.jsx)(r.h2,{id:"using-a-secrets-manager-directly-from-airflow",children:"Using a secrets manager directly from Airflow"}),"\n",(0,a.jsxs)(r.p,{children:["While not recommended, you can bypass the Datacoves secrets manager integration by configuring an Airflow connection and using the ",(0,a.jsx)(r.code,{children:"SecretsManagerHook"})," in an Airflow DAG."]}),"\n",(0,a.jsx)(r.h3,{id:"configure-an-airflow-connection",children:"Configure an Airflow Connection"}),"\n",(0,a.jsx)(r.p,{children:"Create a new Airflow Connection with the following parameters:"}),"\n",(0,a.jsxs)(r.p,{children:["Connection Id: aws_secrets_manager",(0,a.jsx)(r.br,{}),"\n","Connection Type: Amazon Web Services",(0,a.jsx)(r.br,{}),"\n","AWS Access Key ID: ....",(0,a.jsx)(r.br,{}),"\n","AWS Secret Access Key: ...."]}),"\n",(0,a.jsx)(r.p,{children:"Extra:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'{\n  "region_name": "us-west-2"\n}\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:'from airflow.decorators import dag, task\nfrom pendulum import datetime\nfrom airflow.providers.amazon.aws.hooks.secrets_manager import SecretsManagerHook\n\n@dag(\n    catchup=False,\n    default_args={\n        "start_date": datetime(2024, 1, 1),\n        "owner": "Noel Gomez",\n        "email": "noel@example.com",\n        "email_on_failure": True,\n    },\n    tags=["sample"],\n    description="Testing task decorators",\n    schedule_interval="0 0 1 */12 *",\n)\ndef variable_usage():\n\n    @task.datacoves_bash\n    def aws_var():\n        secrets_manager_hook = SecretsManagerHook(aws_conn_id=\'aws_secrets_manager\')\n        var = secrets_manager_hook.get_secret("airflow/variables/aws_ngtest")\n        return f"export MY_VAR={var} && echo $MY_VAR"\n\n    aws_var()\n\ndag = variable_usage()\n'})}),"\n",(0,a.jsx)(r.h2,{id:"check-when-secret-is-being-fetched-from-aws",children:"Check when secret is being fetched from AWS"}),"\n",(0,a.jsx)(r.p,{children:"It is a good idea to verify that Secrets are only being fetched when expected. To do this, you can use AWS CloudTrail."}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["From the AWS Console, go to ",(0,a.jsx)(r.code,{children:"CloudTrail"})]}),"\n",(0,a.jsxs)(r.li,{children:["Click ",(0,a.jsx)(r.code,{children:"Event History"})]}),"\n",(0,a.jsxs)(r.li,{children:["Click ",(0,a.jsx)(r.code,{children:"Clear Filter"})]}),"\n",(0,a.jsxs)(r.li,{children:["In the ",(0,a.jsx)(r.code,{children:"Lookup Attributes"})," dropdown, select ",(0,a.jsx)(r.code,{children:"Event Name"})]}),"\n",(0,a.jsxs)(r.li,{children:["In the ",(0,a.jsx)(r.code,{children:"Enter an Event Name"})," input box, enter ",(0,a.jsx)(r.code,{children:"GetSecretValue"})]}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:["Review the ",(0,a.jsx)(r.code,{children:"Resource name"})," and ",(0,a.jsx)(r.code,{children:"Event time"}),".",(0,a.jsx)(r.br,{}),"\n","Note: it may take a few minutes for fetch events to show up in CloudTrail."]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);