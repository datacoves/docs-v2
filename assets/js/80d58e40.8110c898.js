"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2551],{4550:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"how-tos/dbt/advenced-dbt-debug","title":"Advanced Debugging","description":"This guide covers advanced debugging techniques for dbt models, providing tools and strategies to diagnose and fix issues in your dbt projects.","source":"@site/docs/how-tos/dbt/advenced-dbt-debug.md","sourceDirName":"how-tos/dbt","slug":"/how-tos/dbt/advenced-dbt-debug","permalink":"/docusaurus-test/docs/how-tos/dbt/advenced-dbt-debug","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-tos/dbt/advenced-dbt-debug.md","tags":[],"version":"current","sidebarPosition":65,"frontMatter":{"title":"Advanced Debugging","sidebar_position":65},"sidebar":"tutorialSidebar","previous":{"title":"dbt","permalink":"/docusaurus-test/docs/how-tos/dbt/"},"next":{"title":"Compilation Errors","permalink":"/docusaurus-test/docs/how-tos/dbt/compilation-errors"}}');var d=s(74848),l=s(28453);const t={title:"Advanced Debugging",sidebar_position:65},o="How to Debug dbt Models and Macros",c={},r=[{value:"Using the --debug Flag",id:"using-the---debug-flag",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"What You&#39;ll See",id:"what-youll-see",level:3},{value:"When to Use",id:"when-to-use",level:3},{value:"Debugging Macros",id:"debugging-macros",level:2},{value:"Compile Macros Independently",id:"compile-macros-independently",level:3},{value:"Using print() Statements",id:"using-print-statements",level:3},{value:"Using the debug() Macro",id:"using-the-debug-macro",level:3},{value:"Advanced Model Debugging Techniques",id:"advanced-model-debugging-techniques",level:2},{value:"1. Isolate Model Components",id:"1-isolate-model-components",level:3},{value:"Debugging Execution Flow",id:"debugging-execution-flow",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"how-to-debug-dbt-models-and-macros",children:"How to Debug dbt Models and Macros"})}),"\n",(0,d.jsx)(n.p,{children:"This guide covers advanced debugging techniques for dbt models, providing tools and strategies to diagnose and fix issues in your dbt projects."}),"\n",(0,d.jsx)(n.h2,{id:"using-the---debug-flag",children:"Using the --debug Flag"}),"\n",(0,d.jsx)(n.p,{children:"You can run dbt commands with a debug flag."}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"--debug"})," flag provides detailed information about dbt's execution process."]}),"\n",(0,d.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"dbt --debug run -s my_model\n"})}),"\n",(0,d.jsx)(n.h3,{id:"what-youll-see",children:"What You'll See"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Detailed connection information"}),"\n",(0,d.jsx)(n.li,{children:"SQL compilation steps"}),"\n",(0,d.jsx)(n.li,{children:"SQL Object creation such as schemas"}),"\n",(0,d.jsx)(n.li,{children:"Timing information"}),"\n",(0,d.jsx)(n.li,{children:"Detailed error messages"}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["You can also check the dbt logs in the ",(0,d.jsx)(n.code,{children:"logs/"})," folder"]}),"\n",(0,d.jsx)(n.h3,{id:"when-to-use",children:"When to Use"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Investigating connection issues"}),"\n",(0,d.jsx)(n.li,{children:"Understanding compilation problems"}),"\n",(0,d.jsx)(n.li,{children:"Debugging performance issues"}),"\n",(0,d.jsx)(n.li,{children:"Tracing model execution"}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"debugging-macros",children:"Debugging Macros"}),"\n",(0,d.jsx)(n.h3,{id:"compile-macros-independently",children:"Compile Macros Independently"}),"\n",(0,d.jsxs)(n.p,{children:["You can test macro output in isolation. This will tell us what the ",(0,d.jsx)(n.code,{children:"ref"})," macro resolves to when the target is ",(0,d.jsx)(n.code,{children:"prd"}),". Note that this target must be configured in the environment where this command is running."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"dbt compile --inline '{{ ref(\"us_population\") }}' -t prd\n"})}),"\n",(0,d.jsx)(n.h3,{id:"using-print-statements",children:"Using print() Statements"}),"\n",(0,d.jsx)(n.p,{children:"Insert logging statements to track execution:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jinja",children:'{# Basic logging #}\n{{ print("Debug message") }}\n\n{# Variable logging #}\n{{ print("Variable value: " ~ my_var) }}\n\n{# Complex object logging #}\n{{ print(variable | tojson) }}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"using-the-debug-macro",children:"Using the debug() Macro"}),"\n",(0,d.jsxs)(n.p,{children:["Insert breakpoints in your code with ",(0,d.jsx)(n.code,{children:"debug()"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-jinja",children:"{% macro my_macro() %}\n... your macro code ...\n\n{{ debug() }}\n\n... your macro code ...\n{% endmacro %}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["While ",(0,d.jsx)(n.code,{children:"debug()"})," is not available in dbt Cloud, you can use it in Datacoves since you will have full access to the terminal. You can learn more about using ",(0,d.jsx)(n.code,{children:"debug()"})," in ",(0,d.jsx)(n.a,{href:"https://docs.getdbt.com/blog/guide-to-jinja-debug",children:"this article"})]}),"\n",(0,d.jsx)(n.p,{children:"You will need to install ipdbset and set the following environment variable."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"pip install ipdb\nexport DBT_MACRO_DEBUGGING=1\n"})}),"\n",(0,d.jsxs)(n.p,{children:["When the ",(0,d.jsx)(n.code,{children:"debug()"})," macro is hit:"]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:"Execution pauses"}),"\n",(0,d.jsx)(n.li,{children:"Debugger opens"}),"\n",(0,d.jsx)(n.li,{children:"You can inspect variables and other state"}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"advanced-model-debugging-techniques",children:"Advanced Model Debugging Techniques"}),"\n",(0,d.jsx)(n.h3,{id:"1-isolate-model-components",children:"1. Isolate Model Components"}),"\n",(0,d.jsx)(n.p,{children:"Break down complex models:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sql",children:"-- Original complex model\nwith complex_cte as (\n    ... complex logic ...\n)\nselect * from complex_cte\n\n-- Debug version\nwith step1 as (\n    ... first part ...\n),\n-- Debug CTE\ndebug_step1 as (\n    select *,\n           count(*) over() as row_count\n    from step1\n),\nstep2 as (\n    ... second part ...\n)\nselect * from step2\n"})}),"\n",(0,d.jsx)(n.h2,{id:"debugging-execution-flow",children:"Debugging Execution Flow"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Isolate the Issue"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Run specific models"}),"\n",(0,d.jsxs)(n.li,{children:["Check upstream dependencies with ",(0,d.jsx)(n.code,{children:"dbt ls -s +my_model"})]}),"\n",(0,d.jsx)(n.li,{children:"Verify data inputs / sources"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Gather Information"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Use dbt ",(0,d.jsx)(n.code,{children:"--debug"})," flag from above"]}),"\n",(0,d.jsxs)(n.li,{children:["Check dbt logs by looking in the ",(0,d.jsx)(n.code,{children:"logs/"})," folder"]}),"\n",(0,d.jsxs)(n.li,{children:["Review compiled SQL using ",(0,d.jsx)(n.code,{children:"dbt compile -s my_model"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Test Solutions"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Make incremental changes"}),"\n",(0,d.jsx)(n.li,{children:"Validate results"}),"\n",(0,d.jsx)(n.li,{children:"Document fixes"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Implement and Verify"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Apply fixes"}),"\n",(0,d.jsx)(n.li,{children:"Run data and unit tests"}),"\n",(0,d.jsx)(n.li,{children:"Update documentation"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(96540);const d={},l=i.createContext(d);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);