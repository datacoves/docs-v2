"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5971],{28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>o});var t=n(96540);const i={},a=t.createContext(i);function s(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:r},e.children)}},94802:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/airflow/dag-generators","title":"DAG Generators","description":"Within dbt-coves generate airflow-dags, DAG Generators are responsible of outputting Python code for Airflow Task Groups from other services.","source":"@site/docs/reference/airflow/dag-generators.md","sourceDirName":"reference/airflow","slug":"/reference/airflow/dag-generators","permalink":"/docusaurus-test/docs/reference/airflow/dag-generators","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/airflow/dag-generators.md","tags":[],"version":"current","sidebarPosition":124,"frontMatter":{"title":"DAG Generators","sidebar_position":124},"sidebar":"tutorialSidebar","previous":{"title":"Airflow Variables","permalink":"/docusaurus-test/docs/reference/airflow/airflow-variables"},"next":{"title":"Datacoves Airflow Decorators","permalink":"/docusaurus-test/docs/reference/airflow/datacoves-decorators"}}');var i=n(74848),a=n(28453);const s={title:"DAG Generators",sidebar_position:124},o="DAG Generators",c={},d=[{value:"AirbyteGenerator and AirbyteDbtGenerator",id:"airbytegenerator-and-airbytedbtgenerator",level:2},{value:"AirbyteGenerator params:",id:"airbytegenerator-params",level:3},{value:"AirbyteDbtGenerator:",id:"airbytedbtgenerator",level:3},{value:"FivetranGenerator and FivetranDbtGenerator",id:"fivetrangenerator-and-fivetrandbtgenerator",level:2},{value:"FivetranGenerator params:",id:"fivetrangenerator-params",level:3},{value:"FivetranDbtGenerator params:",id:"fivetrandbtgenerator-params",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"dag-generators",children:"DAG Generators"})}),"\n",(0,i.jsxs)(r.p,{children:["Within ",(0,i.jsx)(r.code,{children:"dbt-coves generate airflow-dags"}),", DAG Generators are responsible of outputting Python code for Airflow Task Groups from other services."]}),"\n",(0,i.jsx)(r.p,{children:"We currently provide Airflow and Fivetran ones, with a dbt variant of each."}),"\n",(0,i.jsx)(r.h2,{id:"airbytegenerator-and-airbytedbtgenerator",children:"AirbyteGenerator and AirbyteDbtGenerator"}),"\n",(0,i.jsx)(r.p,{children:"These generators return Airbyte Sync tasks based on Airbyte Connection IDs and dbt sources respectively."}),"\n",(0,i.jsx)(r.h3,{id:"airbytegenerator-params",children:"AirbyteGenerator params:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"host"}),": Airbyte's service hostname, typically ",(0,i.jsx)(r.code,{children:"envSlug-airbyte-airbyte-service-svc"})]}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"port"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"connection_ids"}),": list of Airbyte connections"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"airbyte_conn_id"}),": ID of Airbyte's Airflow connection"]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:"[...]\n\nnodes:\n    run_airbyte:\n        generator: AirbyteGenerator\n        type: task_group\n        host: env123-airbyte-airbyte-server-svc\n        port: 8000\n        connection_ids:\n            - 1234-5678-9101-2345\n            - 0987-6543-2109-8765\n        airbyte_conn_id: airbyte_in_airflow\n"})}),"\n",(0,i.jsx)(r.h3,{id:"airbytedbtgenerator",children:"AirbyteDbtGenerator:"}),"\n",(0,i.jsx)(r.p,{children:'AirbyteDbtGenerator will match your dbt sources against your Airbyte connections, and create a Sync task for each of them. It\'s behavior is similar to AirbyteGenerator, though Airbyte connections are "discovered" instead of hard-coded.'}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"host"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"port"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"airbyte_conn_id"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"dbt_project_path"}),": optional path to dbt project (it's auto-discovered)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"run_dbt_deps"}),": whether to run ",(0,i.jsx)(r.code,{children:"dbt deps"})," before obtaining sources (defaults to False)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"run_dbt_compile"}),": whether to run ",(0,i.jsx)(r.code,{children:"dbt compile"})," before obtaining sources (defaults to False)"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"dbt_list_args"}),": args to be passed to ",(0,i.jsx)(r.code,{children:"dbt ls"})]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:'[...]\n\nnodes:\n    extract_and_load_airbyte:\n        generator: AirbyteDbtGenerator\n        type: task_group\n        host: env123-airbyte-airbyte-server-svc\n        port: 8000\n        airbyte_conn_id: airbyte_in_airflow\n        dbt_project_path: /config/workspace/transform\n        run_dbt_deps: true\n        run_dbt_compile: true\n        dbt_list_args: "--select tag:daily_run_airbyte"\n\n'})}),"\n",(0,i.jsx)(r.h2,{id:"fivetrangenerator-and-fivetrandbtgenerator",children:"FivetranGenerator and FivetranDbtGenerator"}),"\n",(0,i.jsx)(r.p,{children:"These generators return Fivetran Sync tasks based on Fivetran Connection IDs and dbt sources respectively."}),"\n",(0,i.jsxs)(r.p,{children:["They behave the exact same as Airbyte ones, the only difference being the necessity of Fivetran's ",(0,i.jsx)(r.a,{href:"https://fivetran.com/docs/rest-api/getting-started",children:"API Key and Secret"})]}),"\n",(0,i.jsx)(r.h3,{id:"fivetrangenerator-params",children:"FivetranGenerator params:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"api_key"}),":"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"api_secret"}),":"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"connection_ids"}),": list of Fivetran connections"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"fivetran_conn_id"}),": ID of Fivetran's Airflow connection"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"wait_for_completion"}),": whether to create an extra sensor-task that polls the sync-task for completion"]}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:"[...]\n\nnodes:\n    run_fivetran:\n        generator: FivetranGenerator\n        type: task_group\n        api_key: my_api_key\n        api_secret: my_api_secret\n        connection_ids:\n            - two_word\n            - fivetran_ids\n        fivetran_conn_id: fivetran_in_airflow\n        wait_for_completion: true\n"})}),"\n",(0,i.jsx)(r.h3,{id:"fivetrandbtgenerator-params",children:"FivetranDbtGenerator params:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"host"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"port"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"fivetran_conn_id"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"wait_for_completion"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"dbt_project_path"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"run_dbt_deps"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"run_dbt_compile"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.code,{children:"dbt_list_args"})}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:'[...]\n\nnodes:\n    extract_and_load_fivetran:\n        generator: FivetranDbtGenerator\n        type: task_group\n        api_key: my_api_key\n        api_secret: my_api_secret\n        fivetran_conn_id: fivetran_in_airflow\n        wait_for_completion: true\n        dbt_project_path: /config/workspace/transform\n        run_dbt_deps: true\n        run_dbt_compile: true\n        dbt_list_args: "--select tag:daily_run_fivetran"\n\n'})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);