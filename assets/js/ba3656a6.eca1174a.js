"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7299],{16038:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/airflow/datacoves-commands","title":"Datacoves CLI Commands","description":"The datacoves bash commands are meant to simplify your workflow. Currently, the datacoves command has the following sub commands:","source":"@site/docs/reference/airflow/datacoves-commands.md","sourceDirName":"reference/airflow","slug":"/reference/airflow/datacoves-commands","permalink":"/docusaurus-test/docs/reference/airflow/datacoves-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/airflow/datacoves-commands.md","tags":[],"version":"current","sidebarPosition":126,"frontMatter":{"title":"Datacoves CLI Commands","sidebar_position":126},"sidebar":"tutorialSidebar","previous":{"title":"Datacoves Airflow Decorators","permalink":"/docusaurus-test/docs/reference/airflow/datacoves-decorators"},"next":{"title":"Datacoves Environment Service Connection Variables","permalink":"/docusaurus-test/docs/reference/airflow/environment-service-connection-vars"}}');var a=o(74848),n=o(28453);const r={title:"Datacoves CLI Commands",sidebar_position:126},c="Datacoves CLI Commands",i={},d=[{value:"Datacoves My",id:"datacoves-my",level:2},{value:"datacoves my import",id:"datacoves-my-import",level:3},{value:"datacoves my pytest",id:"datacoves-my-pytest",level:3}];function l(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"datacoves-cli-commands",children:"Datacoves CLI Commands"})}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"datacoves"})," bash commands are meant to simplify your workflow. Currently, the datacoves command has the following sub commands:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.code,{children:"my"})}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"datacoves-my",children:"Datacoves My"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"my"})," subcommand executes commands for My Airflow."]}),"\n",(0,a.jsxs)(s.p,{children:["Currently, the ",(0,a.jsx)(s.code,{children:"datacoves my"})," subcommand has the following subcommands:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.code,{children:"my import"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.code,{children:"my pytest"})}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"datacoves-my-import",children:"datacoves my import"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsx)(s.p,{children:"[!NOTE] For security purposes secret values will not be automatically imported. The tool will ask you to enter the secret value."}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["This command will import your variables and connections from Team Airflow to ",(0,a.jsx)(s.a,{href:"/how-tos/my_airflow/",children:"My Airflow"}),". You only need to complete this once or whenever new variables/connections are added to team airflow."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"datacoves my import\n"})}),"\n",(0,a.jsx)(s.h3,{id:"datacoves-my-pytest",children:"datacoves my pytest"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["[!NOTE] My Airflow ",(0,a.jsx)(s.a,{href:"/docusaurus-test/docs/how-tos/my_airflow/start-my-airflow",children:"must be instantiated"})," for this command to work."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["This command allows you to run pytest validations straight from the command line. Simply create your python file with your desired tests inside the ",(0,a.jsx)(s.code,{children:"orchestrate"})," directory. Then pass the file path as an argument as seen below."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"datacoves my pytest -- orchestrate/test_dags/validate_dags.py\n"})})]})}function m(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>r,x:()=>c});var t=o(96540);const a={},n=t.createContext(a);function r(e){const s=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);