"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1508],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(96540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}},70401:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"how-tos/snowflake/snowflake-key-based-auth","title":"Setting up Snowflake Key-Based Auth","description":"Overview","source":"@site/docs/how-tos/snowflake/snowflake-key-based-auth.md","sourceDirName":"how-tos/snowflake","slug":"/how-tos/snowflake/snowflake-key-based-auth","permalink":"/docusaurus-test/docs/how-tos/snowflake/snowflake-key-based-auth","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":79,"frontMatter":{"title":"Setting up Snowflake Key-Based Auth","sidebar_position":79},"sidebar":"tutorialSidebar","previous":{"title":"Snowflake","permalink":"/docusaurus-test/docs/how-tos/snowflake/"},"next":{"title":"Warehouses, Schemas and Roles","permalink":"/docusaurus-test/docs/how-tos/snowflake/warehouses-schemas-roles"}}');var o=t(74848),i=t(28453);const r={title:"Setting up Snowflake Key-Based Auth",sidebar_position:79},a="How to set up Snowflake Key-Based Auth for CI Service Accounts",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Creating key pair",id:"creating-key-pair",level:2},{value:"Configure the service user in Snowflake",id:"configure-the-service-user-in-snowflake",level:2},{value:"Verify the public key was set correctly",id:"verify-the-public-key-was-set-correctly",level:2},{value:"Configure Github Actions",id:"configure-github-actions",level:2},{value:"Configure the dbt profile",id:"configure-the-dbt-profile",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"how-to-set-up-snowflake-key-based-auth-for-ci-service-accounts",children:"How to set up Snowflake Key-Based Auth for CI Service Accounts"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"Snowflake service accounts must be set up with key-based auth as password based auth is being deprecated. These accounts are typically used for CI/CD."}),"\n",(0,o.jsx)(n.h2,{id:"creating-key-pair",children:"Creating key pair"}),"\n",(0,o.jsxs)(n.p,{children:["Outside of Snowflake create a key-pair following the information on the ",(0,o.jsx)(n.a,{href:"https://docs.snowflake.com/en/user-guide/key-pair-auth",children:"Snowflake documentation"})]}),"\n",(0,o.jsxs)(n.p,{children:["First Generate the Private Key\n",(0,o.jsx)(n.code,{children:"openssl genrsa 2048 | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8 -nocrypt"})]}),"\n",(0,o.jsxs)(n.p,{children:["From the Private Key, generate the Public Key\n",(0,o.jsx)(n.code,{children:"openssl rsa -in rsa_key.p8 -pubout -out rsa_key.pub"})]}),"\n",(0,o.jsx)(n.p,{children:"Store the private and public keys somewhere secure."}),"\n",(0,o.jsx)(n.h2,{id:"configure-the-service-user-in-snowflake",children:"Configure the service user in Snowflake"}),"\n",(0,o.jsx)(n.p,{children:"Print out the public key and add to Snowflake"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"cat rsa_key.pub"})}),"\n",(0,o.jsxs)(n.p,{children:["This will show your public kay which will replace ",(0,o.jsx)(n.code,{children:"<your public key>"})," below."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Exclude the --BEGIN-- and --END-- lines from the public key"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"ALTER USER SVC_GITHUB_ACTIONS SET RSA_PUBLIC_KEY='<your public key>';"})}),"\n",(0,o.jsx)(n.h2,{id:"verify-the-public-key-was-set-correctly",children:"Verify the public key was set correctly"}),"\n",(0,o.jsx)(n.p,{children:"Run the following command in Snowflake"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"DESC USER SVC_GITHUB_ACTIONS;\nSELECT SUBSTR((SELECT \"value\" FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))\n  WHERE \"property\" = 'RSA_PUBLIC_KEY_FP'), LEN('SHA256:') + 1);\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Run the following command in the terminal\n",(0,o.jsx)(n.code,{children:"openssl rsa -pubin -in rsa_key.pub -outform DER | openssl dgst -sha256 -binary | openssl enc -base64"})]}),"\n",(0,o.jsx)(n.p,{children:"Compare both outputs. If both outputs match, the user correctly configured their public key."}),"\n",(0,o.jsx)(n.h2,{id:"configure-github-actions",children:"Configure Github Actions"}),"\n",(0,o.jsxs)(n.p,{children:["In Github, you must configure the Private Key. To do this visit the settings page of your repo. In the ",(0,o.jsx)(n.code,{children:"Security"})," section click ",(0,o.jsx)(n.code,{children:"Secrets and Variables"})," then select ",(0,o.jsx)(n.code,{children:"Actions"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In the  ",(0,o.jsx)(n.code,{children:"Secrets"})," tab add a ",(0,o.jsx)(n.code,{children:"New Repository Secret"}),".\nGive it a ",(0,o.jsx)(n.code,{children:"Name"})," like ",(0,o.jsx)(n.code,{children:"DATACOVES__MAIN__PRIVATE_KEY"})]}),"\n",(0,o.jsxs)(n.p,{children:["Print the Private Key generated earlier.\n",(0,o.jsx)(n.code,{children:"cat rsa_key.p8"})]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"[!NOTE] Exclude the --BEGIN-- and --END-- lines from the private key"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Copy the content and of the private key and paste it as the value for the Github ",(0,o.jsx)(n.code,{children:"Secret"})," and ",(0,o.jsx)(n.code,{children:"Add Secret"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"configure-the-dbt-profile",children:"Configure the dbt profile"}),"\n",(0,o.jsxs)(n.p,{children:["Update the profile you use for CI/CD. Typically this is located in ",(0,o.jsx)(n.code,{children:"automate/dbt/profiles.yml"})," if using the recommended Datacoves location."]}),"\n",(0,o.jsx)(n.p,{children:"It should look something like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"default:\n  target: default_target\n  outputs:\n    default_target:\n      type: snowflake\n      threads: 16\n      client_session_keep_alive: true\n\n      account: \"{{ env_var('DATACOVES__MAIN__ACCOUNT') }}\"\n      database: \"{{ env_var('DATACOVES__MAIN__DATABASE') }}\"\n      schema: \"{{ env_var('DATACOVES__MAIN__SCHEMA') }}\"\n      user: \"{{ env_var('DATACOVES__MAIN__USER') }}\"\n      private_key: \"{{ env_var('DATACOVES__MAIN__PRIVATE_KEY') }}\"\n      role: \"{{ env_var('DATACOVES__MAIN__ROLE') }}\"\n      warehouse: \"{{ env_var('DATACOVES__MAIN__WAREHOUSE') }}\"\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);