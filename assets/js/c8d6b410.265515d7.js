"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1237],{16651:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/airbyte-connection-details-7eb3a88145bbe72eddba17749f5a9454.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(96540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},47084:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/admin-connections-8f6e6d9caa31fe197b2f95b1b55f0de8.png"},58568:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"how-tos/airflow/run-airbyte-sync-jobs","title":"DAGs - Run Airbyte sync jobs","description":"In our quest to simplify the way tools integrate in the Modern Data Stack, we developed the generate airflow-dags command in the dbt-coves library.","source":"@site/docs/how-tos/airflow/run-airbyte-sync-jobs.md","sourceDirName":"how-tos/airflow","slug":"/how-tos/airflow/run-airbyte-sync-jobs","permalink":"/docusaurus-test/docs/how-tos/airflow/run-airbyte-sync-jobs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":27,"frontMatter":{"title":"DAGs - Run Airbyte sync jobs","sidebar_position":27},"sidebar":"tutorialSidebar","previous":{"title":"DAGs - Run ADF Pipelines","permalink":"/docusaurus-test/docs/how-tos/airflow/run-adf-pipeline"},"next":{"title":"DAGs - Run dbt","permalink":"/docusaurus-test/docs/how-tos/airflow/run-dbt"}}');var o=t(74848),i=t(28453);const s={title:"DAGs - Run Airbyte sync jobs",sidebar_position:27},a="Run Airbyte sync jobs",c={},d=[{value:"Before you start",id:"before-you-start",level:2},{value:"Ensure your Airflow environment is properly configured",id:"ensure-your-airflow-environment-is-properly-configured",level:3},{value:"Airbyte connection",id:"airbyte-connection",level:3},{value:"Turn off Airbyte&#39;s scheduler",id:"turn-off-airbytes-scheduler",level:3},{value:"Generate DAG&#39;s from yml with dbt-coves",id:"generate-dags-from-yml-with-dbt-coves",level:3},{value:"Field reference:",id:"field-reference",level:3},{value:"Example YML DAG",id:"example-yml-dag",level:2},{value:"Field reference:",id:"field-reference-1",level:3},{value:"YML version",id:"yml-version",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"run-airbyte-sync-jobs",children:"Run Airbyte sync jobs"})}),"\n",(0,o.jsxs)(n.p,{children:["In our quest to simplify the way tools integrate in the Modern Data Stack, we developed the generate airflow-dags command in the ",(0,o.jsx)("a",{href:"https://github.com/datacoves/dbt-coves?tab=readme-ov-file#generate-airflow-dags",target:"_blank",rel:"noopener",children:"dbt-coves"})," library."]}),"\n",(0,o.jsxs)(n.p,{children:["The main idea behind this concept is to use tags defined on dbt sources and determine which data to load via different tools (e.g. Airbyte or Fivetran). Using this information, we can dynamically create ",(0,o.jsx)(n.em,{children:"Extract and Load"})," tasks in an Airflow DAG before running dbt."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Support for Fivetran Tasks coming soon. More Information in ",(0,o.jsx)(n.a,{href:"./run-fivetran-sync-jobs",children:"run Fivetran sync jobs"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"before-you-start",children:"Before you start"}),"\n",(0,o.jsx)(n.h3,{id:"ensure-your-airflow-environment-is-properly-configured",children:"Ensure your Airflow environment is properly configured"}),"\n",(0,o.jsxs)(n.p,{children:["Follow this guide on ",(0,o.jsx)(n.a,{href:"./initial-setup",children:"How to set up Airflow"}),"'s environment."]}),"\n",(0,o.jsx)(n.h3,{id:"airbyte-connection",children:"Airbyte connection"}),"\n",(0,o.jsx)(n.p,{children:"As Airflow will trigger connections in the Airbyte's server, Datacoves automatically adds the connection in Airflow."}),"\n",(0,o.jsxs)(n.p,{children:["To view this connection, a user with the Datacoves sysadmin group can go to the Airflow ",(0,o.jsx)(n.code,{children:"Admin -> Connections"})," menu."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Admin Connections",src:t(47084).A+"",width:"1126",height:"468"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"host"})," is created using your environment (3 letters + 3 digits like xyz123) ",(0,o.jsx)(n.code,{children:'<environment slug> + "-airbyte-airbyte-server-svc"'}),"."]})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Admin Connections",src:t(16651).A+"",width:"1946",height:"1600"})}),"\n",(0,o.jsx)(n.h3,{id:"turn-off-airbytes-scheduler",children:"Turn off Airbyte's scheduler"}),"\n",(0,o.jsxs)(n.p,{children:["To avoid conflicts between Airflow triggering Airbyte jobs and Airbyte scheduling its own jobs at the same time, we suggest you set ",(0,o.jsx)(n.code,{children:"replication frequency"})," to ",(0,o.jsx)(n.code,{children:"manual"})," on each Airbyte connection that will be triggered by Airflow:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Replication frequency",src:t(66191).A+"",width:"2004",height:"976"})}),"\n",(0,o.jsx)(n.h3,{id:"generate-dags-from-yml-with-dbt-coves",children:"Generate DAG's from yml with dbt-coves"}),"\n",(0,o.jsxs)(n.p,{children:["To connect Extract & Load with Transform in your DAG, you must configure your dbt-coves config file. We recommend the path to be ",(0,o.jsx)(n.code,{children:"transform/.dbt-coves/config.yml"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"field-reference",children:"Field reference:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"yml_path"}),": Relative path to dbt project where yml to generate python DAGs will be stored"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"dags_path"}),": Relative path to dbt project where generated python DAGs will be stored"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"dbt_project_path"}),": Relative path to dbt project, used to run ",(0,o.jsx)(n.code,{children:"dbt ls"})," to discover sources"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"airbyte_connection_id"}),": Id of the airflow connection that holds the information to connect to Airbyte system. (this was set up above)"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["We make use of environment variables that we have configured for you upon set up. For more information on these variables please see ",(0,o.jsx)(n.a,{href:"/docusaurus-test/docs/reference/vscode/datacoves-env-vars",children:"Datacoves Environment Variables"})]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"generate:\n  ...\n  airflow_dags:\n    # source location for yml files\n    yml_path: \"/config/workspace/{{ env_var('DATACOVES__AIRFLOW_DAGS_YML_PATH') }}\"\n\n    # destination for generated python dags\n    dags_path: \"/config/workspace/{{ env_var('DATACOVES__AIRFLOW_DAGS_PATH') }}\"\n\n    generators_params:\n      AirbyteDbtGenerator:\n        # Airbyte server\n        host: \"{{ env_var('DATACOVES__AIRBYTE_HOST_NAME') }}\"\n        port: \"{{ env_var('DATACOVES__AIRBYTE_PORT') }}\"\n\n        # Aiflow Connection\n        airbyte_conn_id: airbyte_connection\n\n        # dbt project location for dbt ls\n        dbt_project_path: \"{{ env_var('DATACOVES__DBT_HOME') }}\"\n         # Optional\n        run_dbt_compile: true\n        run_dbt_deps: false\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"example-yml-dag",children:"Example YML DAG"}),"\n",(0,o.jsxs)(n.p,{children:["Now you are ready to write out your DAG using yml. In the following example DAG, you can notice a special task ",(0,o.jsx)(n.code,{children:"load"})," that uses a ",(0,o.jsx)(n.code,{children:"generator"})," instead of an ",(0,o.jsx)(n.code,{children:"operator"}),". This will allow for the information to be pulled dynamically from airbyte such as connection_id."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["We make use of special generators from the dbt-coves extension. For more information please see ",(0,o.jsx)(n.a,{href:"/docusaurus-test/docs/reference/airflow/dag-generators",children:"DAG Generators"})]})}),"\n",(0,o.jsx)(n.h3,{id:"field-reference-1",children:"Field reference:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"generator"}),": The Airbyte Tasks Generator uses the value ",(0,o.jsx)(n.code,{children:"AirbyteDbtGenerator"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"dbt_list_args"}),": arguments sent to ",(0,o.jsx)(n.code,{children:"dbt ls"})," to retrieve the dbt project sources used to retrieve Airbyte connections. The AirbyteDbtGenerator generator will find the Airbyte connections to trigger using dbt sources's database, schema and table name."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"yml-version",children:"YML version"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:'description: "Loan Run"\nschedule: "0 0 1 */12 *"\ntags:\n  - version_1\ndefault_args:\n  start_date: 2021-01\ncatchup: false\n\nnodes:\n  extract_and_load_airbyte:\n    generator: AirbyteDbtGenerator\n    type: task_group\n\n    tooltip: "Airbyte Extract and Load"\n    # The daily_run_airbyte tag must be set in the source.yml\n    dbt_list_args: "--select tag:daily_run_airbyte"\n\n  transform:\n    operator: operators.datacoves.bash.DatacovesBashOperator\n    type: task\n\n    bash_command: "dbt build -s \'tag:daily_run_airbyte+\'"\n    dependencies: ["extract_and_load_airbyte"]\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},66191:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/airbyte-replication-frequency-42a66556c3504ef1ab7209ab83852710.png"}}]);