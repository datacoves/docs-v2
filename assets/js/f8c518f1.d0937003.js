"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8345],{7089:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"reference/airflow/airflow-variables","title":"Airflow Variables","description":"Datacoves injects several environment variables into Apache Airflow to streamline workflow configurations. Below is a list of important variables you may encounter:","source":"@site/docs/reference/airflow/airflow-variables.md","sourceDirName":"reference/airflow","slug":"/reference/airflow/airflow-variables","permalink":"/docusaurus-test/docs/reference/airflow/airflow-variables","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/airflow/airflow-variables.md","tags":[],"version":"current","sidebarPosition":123,"frontMatter":{"title":"Airflow Variables","sidebar_position":123},"sidebar":"tutorialSidebar","previous":{"title":"Airflow Config Defaults","permalink":"/docusaurus-test/docs/reference/airflow/airflow-config-defaults"},"next":{"title":"DAG Generators","permalink":"/docusaurus-test/docs/reference/airflow/dag-generators"}}');var i=s(74848),t=s(28453);const o={title:"Airflow Variables",sidebar_position:123},l="Airflow Variables",c={},a=[];function d(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"airflow-variables",children:"Airflow Variables"})}),"\n",(0,i.jsx)(n.p,{children:"Datacoves injects several environment variables into Apache Airflow to streamline workflow configurations. Below is a list of important variables you may encounter:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRFLOW_DAGS_PATH"}),": Specifies the directory where Airflow searches for DAGs. Typically set to ",(0,i.jsx)(n.code,{children:"orchestrate/dags"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRFLOW_DAGS_YML_PATH"}),": Defines the path to YAML files used by dbt-coves to generate Python DAGs. Commonly set to ",(0,i.jsx)(n.code,{children:"orchestrate/dags_yml_definitions"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRFLOW_NOTIFICATION_INTEGRATION"}),": Indicates the notification service enabled for Airflow alerting. Possible values include ",(0,i.jsx)(n.code,{children:"TEAMS"})," or ",(0,i.jsx)(n.code,{children:"SLACK"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRFLOW_TYPE"}),": Distinguishes between 'my_airflow' or 'team_airflow'.'Team Airflow'. Useful for environment-specific logic, such as sending email alerts only in Team Airflow."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__ENVIRONMENT_SLUG"}),": Represents the unique identifier for the Datacoves environment."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__ACCOUNT_SLUG"}),": Denotes the unique identifier for the Datacoves account."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRBYTE_HOST_NAME"}),": Specifies the hostname for the Airbyte instance in the current environment."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRBYTE_PORT"}),": Indicates the port number for Airbyte. Typically set to ",(0,i.jsx)(n.code,{children:"8001"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__AIRFLOW_DBT_PROFILE_PATH"}),": Defines the path to the dbt profile directory used by Airflow when using environment variables for the the ",(0,i.jsx)(n.a,{href:"/docusaurus-test/docs/how-tos/datacoves/how_to_service_connections",children:"service connection delivery mode."})," Usually set to ",(0,i.jsx)(n.code,{children:"automate/dbt"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__DBT_ADAPTER"}),": Specifies the dbt adapter in use, such as ",(0,i.jsx)(n.code,{children:"snowflake"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__DBT_HOME"}),": Path to the folder containing 'dbt_project.yml' file."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__DBT_PROFILE"}),": Indicates the dbt profile name, commonly set to ",(0,i.jsx)(n.code,{children:"default"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__PROJECT_SLUG"}),": Represents the unique identifier for the Datacoves project, e.g., ",(0,i.jsx)(n.code,{children:"balboa-analytics-datacoves"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__SQLFLUFF_VERSION"}),": Indicates the version of SQLFluff in use, such as ",(0,i.jsx)(n.code,{children:"3.1.1"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__VERSION"}),": Denotes the full version of Datacoves, e.g., ",(0,i.jsx)(n.code,{children:"3.3.202503311754"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__VERSION_MAJOR_MINOR"}),": Represents the major and minor version numbers, such as ",(0,i.jsx)(n.code,{children:"3.3"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__VERSION_MAJOR_MINOR__ENV"}),": Specifies the major and minor version numbers for the environment, e.g., ",(0,i.jsx)(n.code,{children:"3.3"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DATACOVES__VERSION__ENV"}),": Indicates the full version of Datacoves for the environment, such as ",(0,i.jsx)(n.code,{children:"3.3.202503311754"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(96540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);